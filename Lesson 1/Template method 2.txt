 Есть игра-вертикальный раннер
 
 Имеется класс Player
 Игрок может прыгать с тремя разными видами прыжка(слабый, средний и сильный)
 Создаем интерфейс IJump
 Класс Player должен реализовать интерфейс IJump с методом Jump();
 Соответственно есть 3 класса EasyJump, MemiumJump, HardJump, каждый из них наследуется от класса Booster
 Класс Booster делаем абстрактным и делаем в нем асбтрактный метод ChangeJumpingType и в виде аргумента передаем туда интерфейс IJump

 В игре есть условная логика для того чтобы игрок мог прыгать по разному, предположим что есть специальный буст,
 взяв который наш персонаж может прыгать вверх с такой силой, какая была указана в данном бусте

 В бусты можно добавить коллайдер, всего 3 вида бустера, каждый из которых имеет компонент в виде класса(EasyJump, MemiumJump, HardJump)
 Если мы прикоснулись к бустеру, вызываем метод OnTriggerEnter и проверяем наличие интерфейса IJump у коллайдера
 После этого вызываем метод абстрактного класса Booster ChangeJumpingType, передаем туда интерфейс, 
 Каждый из классов (EasyJump, MemiumJump, HardJump) по своему переопределяют данный им абстрактный метод, допустим что каждый из них
 вызывает метод переданного ему интерфейса и передает ему в виде аргмумента числовое значение

 EasyJump - 2
 MemiumJump - 4
 HardJump - 8
 
 Теперь когда один из классов(EasyJump, MemiumJump, HardJump) вызовет метод интерфейса, то есть нашего класс Player то устанавливает ему какое-то
 определенное значение для прыжка, поссле этого в методе Update вызываем прыжок и умножаем значения в методе AddForce на _jumpValue которое только
 что установили;
 

